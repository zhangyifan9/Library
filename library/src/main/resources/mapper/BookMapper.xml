<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace属性：用于指定当前的映射文件和哪个接口进行映射，需要指定接口的文件路径-->

<mapper namespace="com.library.mapper.BookMapper">


    <select id = "findBookCountByName" parameterType="string" resultType="Integer">
        SELECT COUNT(*) FROM book
        WHERE bName LIKE "%"#{name}"%"
    </select>

    <select id = "findBookCountByAuthor" parameterType="string" resultType="Integer">
        SELECT COUNT(*) FROM book
        WHERE author LIKE "%"#{bauthor}"%"
    </select>

    <select id = "findBookCountByPublished" parameterType="string" resultType="Integer">
        SELECT COUNT(*) FROM book
        WHERE published = #{published}
    </select>

    <select id = "findBookCountAll" parameterType="string" resultType="Integer">
        SELECT COUNT(*) FROM book
    </select>


    <select id="findBookByISBN" resultType="com.library.bean.Book">
        SELECT * FROM book WHERE isbn = #{isbn};
    </select>

    <select id="findBookByname"  resultType="com.library.bean.Book">
        SELECT * FROM book
        WHERE bname
            LIKE "%"#{name}"%"
            LIMIT #{offset}, #{limit}
    </select>

    <select id="findBooksByAuthor" resultType="com.library.bean.Book">
        SELECT * FROM book
        WHERE author
                  LIKE "%"#{bauthor}"%"
            LIMIT #{offset}, #{limit}
    </select>

    <select id="findBooksByPublished" resultType="com.library.bean.Book">
        SELECT * FROM book
        WHERE Published = #{published}
            LIMIT #{offset}, #{limit}
    </select>

    <select id="findAllBooks" resultType="com.library.bean.Book">
        SELECT * FROM book
            LIMIT #{offset}, #{limit}
    </select>


    <insert id="insert">
        INSERT INTO book (isbn,bname, author,price, `type`,
                          introduction, copiesnum, publishing,published,photoUrl )
        VALUES (#{isbn},#{bname}, #{author}, #{price}, #{type},
                #{introduction},  #{copiesnum}, #{publishing},#{published},#{photoUrl})
    </insert>


    <update id="changeBook">
        UPDATE book
        SET bname  = #{bname}, author = #{author}, price = #{price}, type =#{type},
            introduction = #{introduction},  copiesnum = #{copiesnum},
            publishing = #{publishing}, published = #{published}, photoUrl = #{photoUrl}
        WHERE isbn  = #{isbn}
    </update>

    <delete id="deleteBook">
        DELETE FROM book
        WHERE isbn = #{isbn}
    </delete>

    <update id="addCopiesNum">
        UPDATE book
        SET copiesnum = copiesnum+1
        WHERE isbn = #{isbn};
    </update>

    <update id="reduceCopiesNum">
        UPDATE book
        SET copiesnum = copiesnum-1
        WHERE isbn = #{isbn};
    </update>

    <select id="getCopiesNumById" resultType="int">
        SELECT copiesnum
        FROM book
        WHERE bid = #{book_id}
    </select>

    <update id="addResvNum">
        UPDATE book
        SET resvnum = resvnum+1
        WHERE bid = #{book_id};
    </update>

    <update id="reduceResvNum">
        UPDATE book
        SET resvnum = resvnum-1
        WHERE bid = #{book_id};
    </update>

    <select id="getResvNumById" resultType="int">
        SELECT resvnum
        FROM book
        WHERE bid = #{book_id}
    </select>

<!--图书副本相关-->





    <select id = "findCountAllCopies" parameterType="string" resultType="Integer">
        SELECT COUNT(*) FROM copies
        WHERE isbn = #{isbn}
    </select>

    <select id="findAllCopies" resultType="com.library.bean.Copies">
        SELECT * FROM copies
        WHERE isbn = #{isbn}
            LIMIT #{offset}, #{limit}
    </select>




    <insert id="addCopies">
        INSERT INTO copies (barcode, isbn,racknum,reserved,borrowed)
        VALUES (#{barcode},#{isbn}, #{racknum},#{reserved},#{borrowed})
    </insert>

    <delete id="deleteCopies">
        DELETE FROM copies
        WHERE barcode = #{barcode}
    </delete>

    <update id="reserveCopies">
        UPDATE copies
        SET reserved = 1
        WHERE barcode = #{barcode};
    </update>

    <update id="cancelReserveCopies">
        UPDATE copies
        SET reserved = 0
        WHERE barcode = #{barcode};
    </update>

    <update id="borrowCopies">
        UPDATE copies
        SET borrowed = 1
        WHERE barcode = #{barcode};
    </update>

    <update id="cancelBorrowCopies">
        UPDATE copies
        SET borrowed = 0
        WHERE barcode = #{barcode};
    </update>



</mapper>